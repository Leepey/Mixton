import { Address } from '@ton/core';
import { NetworkProvider } from '@ton/blueprint';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

export async function run(provider: NetworkProvider) {
    const ui = provider.ui();

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    const recipientAddress = await ui.input('Recipient address to check:');

    try {
        // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥—Ä–µ—Å–∞
        const state = await provider.provider(Address.parse(recipientAddress)).getState();
        const balance = state.balance;

        ui.write(`üí∞ Recipient Balance Check:`);
        ui.write(`   Address: ${recipientAddress}`);
        ui.write(`   Balance: ${(Number(balance) / 1000000000).toFixed(9)} TON`);
        ui.write(`   State: ${state.state.type}`);

        if (state.state.type === 'active') {
            ui.write(`‚úÖ Recipient account is active and has funds!`);
        } else {
            ui.write(`‚ö†Ô∏è  Recipient account state: ${state.state.type}`);
        }

    } catch (error) {
        ui.write(`‚ùå Error checking recipient: ${error instanceof Error ? error.message : String(error)}`);
    }
}